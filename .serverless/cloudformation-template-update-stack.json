{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "RequestValidationFunctionLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/requestValidation-gamma"
      }
    },
    "ResponseFunctionLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/response-gamma"
      }
    },
    "ResizeImageFunctionLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/resizeImage-gamma"
      }
    },
    "RequestValidationFunctionLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/image-resizer/-gamma/1689209227459-2023-07-13T00:47:07.459Z/requestValidationFunction.zip"
        },
        "Handler": "functions/requestValidation/index.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "requestValidation-gamma",
        "MemorySize": 128,
        "Timeout": 5,
        "Role": {
          "Fn::GetAtt": [
            "LambdaRole",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "RequestValidationFunctionLogGroup",
        "LambdaRole"
      ]
    },
    "ResponseFunctionLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/image-resizer/-gamma/1689209227459-2023-07-13T00:47:07.459Z/responseFunction.zip"
        },
        "Handler": "functions/response/index.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "response-gamma",
        "MemorySize": 128,
        "Timeout": 5,
        "Role": {
          "Fn::GetAtt": [
            "LambdaRole",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ResponseFunctionLogGroup",
        "LambdaRole"
      ]
    },
    "ResizeImageFunctionLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/image-resizer/-gamma/1689209227459-2023-07-13T00:47:07.459Z/resizeImageFunction.zip"
        },
        "Handler": "functions/resizeImage/index.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "resizeImage-gamma",
        "MemorySize": 3000,
        "Timeout": 30,
        "Role": {
          "Fn::GetAtt": [
            "LambdaRole",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ResizeImageFunctionLogGroup",
        "LambdaRole"
      ]
    },
    "RequestValidationFunctionLambdaVersionwBAjRT11TQpgZQM8rxaKpVyI1uJRpzlhHJXLqY7E": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RequestValidationFunctionLambdaFunction"
        },
        "CodeSha256": "cfO4hEhOcnAYom5DUkoijJCrBATIoouNCCJtoDzcpfQ="
      }
    },
    "ResponseFunctionLambdaVersionVHn4BFHIugriX6nhOv3AfY7Hac0d2pw1YXXEaixfQk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ResponseFunctionLambdaFunction"
        },
        "CodeSha256": "cfO4hEhOcnAYom5DUkoijJCrBATIoouNCCJtoDzcpfQ="
      }
    },
    "ResizeImageFunctionLambdaVersionn3SnhnIRUNtIfS88iGeXCc02YLUG97ZJ7eYpHWh35j0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ResizeImageFunctionLambdaFunction"
        },
        "CodeSha256": "9vEJ0+cqyvOtxFaqqTi+AV27sON8SDezecr4tUXmjjQ="
      }
    },
    "ResizeImageFunctionCustomS31": {
      "Type": "Custom::S3",
      "Version": 1,
      "DependsOn": [
        "ResizeImageFunctionLambdaFunction",
        "CustomDashresourceDashexistingDashs3LambdaFunction"
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomDashresourceDashexistingDashs3LambdaFunction",
            "Arn"
          ]
        },
        "FunctionName": "resizeImage-gamma",
        "BucketName": {
          "Ref": "ImagesS3Bucket"
        },
        "BucketConfigs": [
          {
            "Event": "s3:ObjectCreated:*",
            "Rules": [
              {
                "Prefix": "images/"
              }
            ]
          }
        ]
      }
    },
    "IamRoleCustomResourcesLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "-gamma",
                  "image-resizer",
                  "custom-resources-lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn",
                        {
                          "Ref": "AWS::Partition"
                        },
                        "s3",
                        "",
                        "",
                        {
                          "Ref": "ImagesS3Bucket"
                        }
                      ]
                    ]
                  },
                  "Action": [
                    "s3:PutBucketNotification",
                    "s3:GetBucketNotification"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn",
                        {
                          "Ref": "AWS::Partition"
                        },
                        "lambda",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "function",
                        "*"
                      ]
                    ]
                  },
                  "Action": [
                    "lambda:AddPermission",
                    "lambda:RemovePermission"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "CustomDashresourceDashexistingDashs3LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/image-resizer/-gamma/1689209227459-2023-07-13T00:47:07.459Z/custom-resources.zip"
        },
        "FunctionName": "image-resizer--gamma-custom-resource-existing-s3",
        "Handler": "s3/handler.handler",
        "MemorySize": 1024,
        "Runtime": "nodejs16.x",
        "Timeout": 180,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleCustomResourcesLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "IamRoleCustomResourcesLambdaExecution"
      ]
    },
    "ImagesS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "sinapsis-images-nobile-gamma"
      }
    },
    "CloudFrontDistribution": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "DefaultCacheBehavior": {
            "ForwardedValues": {
              "QueryString": "false",
              "Cookies": {
                "Forward": "none"
              }
            },
            "AllowedMethods": [
              "HEAD",
              "DELETE",
              "POST",
              "GET",
              "OPTIONS",
              "PUT",
              "PATCH"
            ],
            "TargetOriginId": "ImagesS3BucketOrigin",
            "ViewerProtocolPolicy": "allow-all",
            "LambdaFunctionAssociations": [
              {
                "EventType": "viewer-request",
                "IncludeBody": false,
                "LambdaFunctionARN": {
                  "Ref": "RequestValidationFunctionLambdaVersionwBAjRT11TQpgZQM8rxaKpVyI1uJRpzlhHJXLqY7E"
                }
              },
              {
                "EventType": "origin-response",
                "IncludeBody": false,
                "LambdaFunctionARN": {
                  "Ref": "ResponseFunctionLambdaVersionVHn4BFHIugriX6nhOv3AfY7Hac0d2pw1YXXEaixfQk"
                }
              }
            ]
          },
          "Origins": [
            {
              "DomainName": "sinapsis-images-nobile-gamma.s3.amazonaws.com",
              "Id": "ImagesS3BucketOrigin",
              "S3OriginConfig": {
                "OriginAccessIdentity": ""
              },
              "OriginAccessControlId": {
                "Fn::GetAtt": [
                  "OriginAccessControl",
                  "Id"
                ]
              }
            }
          ],
          "Enabled": true
        }
      }
    },
    "BucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ImagesS3Bucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Sid": "GetPutObject",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudfront.amazonaws.com"
              },
              "Action": [
                "s3:GetObject",
                "s3:PutObject"
              ],
              "Resource": "arn:aws:s3:::sinapsis-images-nobile-gamma/*",
              "Condition": {
                "StringEquals": {
                  "AWS:SourceArn": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:cloudfront::692748077510:distribution/",
                          {
                            "Fn::GetAtt": [
                              "CloudFrontDistribution",
                              "Id"
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "OriginAccessControl": {
      "Type": "AWS::CloudFront::OriginAccessControl",
      "Properties": {
        "OriginAccessControlConfig": {
          "Name": "image-resizer-gamma",
          "OriginAccessControlOriginType": "s3",
          "SigningBehavior": "always",
          "SigningProtocol": "sigv4"
        }
      }
    },
    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "lambdaRole-image-resizer-gamma",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                  "edgelambda.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "lambdaPolicy-image-resizer-gamma",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:PutObject",
                    "lambda:InvokeFunction"
                  ],
                  "Resource": [
                    "arn:aws:s3:::sinapsis-images-nobile-gamma/*",
                    "arn:aws:s3:::sinapsis-images-nobile-gamma"
                  ]
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-image-resizer--gamma-ServerlessDeploymentBucketName"
      }
    },
    "RequestValidationFunctionLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RequestValidationFunctionLambdaVersionwBAjRT11TQpgZQM8rxaKpVyI1uJRpzlhHJXLqY7E"
      },
      "Export": {
        "Name": "sls-image-resizer--gamma-RequestValidationFunctionLambdaFunctionQualifiedArn"
      }
    },
    "ResponseFunctionLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ResponseFunctionLambdaVersionVHn4BFHIugriX6nhOv3AfY7Hac0d2pw1YXXEaixfQk"
      },
      "Export": {
        "Name": "sls-image-resizer--gamma-ResponseFunctionLambdaFunctionQualifiedArn"
      }
    },
    "ResizeImageFunctionLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ResizeImageFunctionLambdaVersionn3SnhnIRUNtIfS88iGeXCc02YLUG97ZJ7eYpHWh35j0"
      },
      "Export": {
        "Name": "sls-image-resizer--gamma-ResizeImageFunctionLambdaFunctionQualifiedArn"
      }
    }
  }
}